
# def format_address(city, street, house_number, apartment=None):
#     address = f"{city}, ул. {street}, д. {house_number}"
#     if apartment is not None:
#         address += f", кв. {apartment}"
#     print(address)
#
# format_address("Москва", "Тверская", 10)
# format_address(city="Санкт-Петербург", street="Невский проспект", house_number=28) #Именованные аргументы
# format_address("Киев", "Крещатик", 5, 12) #Позиционные аргументы, apartment = 12
# format_address("Одесса", house_number=15, street="Дерибасовская") #Комбинирование позиционных и именованных

'''Написать функцию `greet_person(name, age)`, которая принимает имя и возраст в качестве параметров.
Функция должна выводить приветствие в формате: "Привет, [имя]! Тебе [возраст] лет."

- Проверить работу функции, вызывая ее с разными позиционными аргументами
- Проверить работу функции, используя именованные аргументы'''

# def greet_person(name, age):
#     print(f'Привет, {name}! Тебе {age} лет.')
#
# a = 'Ivan'
# b = '31'
#
# greet_person(a, b)
# greet_person(name='Igor', age='25')

'''Написать функцию `circle_area`, которая вычисляет площадь круга Параметр `pi` имеет значение по умолчанию 3.14159
Функция должна возвращать вычисленную площадь. (Площадь круга = π * r^2).

- Вызвать функцию, используя значение `pi` по умолчанию!
- Вызвать функцию, передав другое значение для `pi` (например, 3.14)'''

# def circle_area(rad, pi=3.14159):
#     result = pi * rad **2
#     # print(f'{result:.5f}')
#     print(result)
#
# circle_area(5)
# circle_area(5, 3.14)

'''Написать функцию `book_info(title, author, year, genre="Неизвестно")`, которая принимает название книги, автора, 
год издания и жанр (со значением по умолчанию "Неизвестно"). 
Функция должна выводить информацию о книге в следующем формате:

`Название: [название]
Автор: [автор]
Год издания: [год]
Жанр: [жанр]`

- Вызвать функцию, передав все четыре аргумента (позиционно)
- Вызвать функцию, используя именованные аргументы в произвольном порядке
- Вызвать функцию, передав только название, автора и год (жанр должен быть использован по умолчанию)'''

# def book_info(title, author, year, genre="Неизвестно"):
#     print(f'Название: \t\t{title}\nАвтор: \t\t{author}\nГод издания: \t\t{year}\nЖанр: \t\t{genre}\n')
#
# a = 'Война и мир'
# b = 'Лев Толстой'
# c = 1869
# d = 'Роман'
#
# book_info(a, b, c, d)
# book_info(author='Денис Фонвизин', year=1783, title='Недоросль')
# book_info('Тарас Бульба', 'Николай Гоголь', 1835, 'Повесть')

'''Написать функцию `convert_currency(amount, rate, from_currency="USD", to_currency="EUR")`, 
которая конвертирует сумму `amount` из валюты `from_currency` в валюту `to_currency`, используя курс `rate` 
Функция должна возвращать сконвертированную сумму

- Проверить работу функции, используя разные значения для всех параметров (позиционно)
- Вызовите функцию, используя именованные аргументы, чтобы изменить валюты (например, из "USD" в "BTC")'''

# def convert_currency(amount, rate, from_currency="USD", to_currency="EUR"):
#     if amount > 0:
#         print(f'{amount} {from_currency} -> {amount*rate} {to_currency}')
#     else:
#         print(f'amount <= 0')
#
# convert_currency(10, 1.2)
# convert_currency(10, 0.0001, 'usdt', 'btc' )

#Спросить на тему реализации у ментора